var EmailsEditor=function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){var r=n(5).default;t.exports=r},function(t,e,n){var r=n(2),o=n(3);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var a={insert:"head",singleton:!1},i=(r(o,a),o.locals?o.locals:{});t.exports=i},function(t,e,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),i=[];function c(t){for(var e=-1,n=0;n<i.length;n++)if(i[n].identifier===t){e=n;break}return e}function l(t,e){for(var n={},r=[],o=0;o<t.length;o++){var a=t[o],l=e.base?a[0]+e.base:a[0],s=n[l]||0,u="".concat(l," ").concat(s);n[l]=s+1;var f=c(u),d={css:a[1],media:a[2],sourceMap:a[3]};-1!==f?(i[f].references++,i[f].updater(d)):i.push({identifier:u,updater:g(d,e),references:1}),r.push(u)}return r}function s(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var i=a(t.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}return e}var u,f=(u=[],function(t,e){return u[t]=e,u.filter(Boolean).join("\n")});function d(t,e,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=f(e,o);else{var a=document.createTextNode(o),i=t.childNodes;i[e]&&t.removeChild(i[e]),i.length?t.insertBefore(a,i[e]):t.appendChild(a)}}function p(t,e,n){var r=n.css,o=n.media,a=n.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),a&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var m=null,v=0;function g(t,e){var n,r,o;if(e.singleton){var a=v++;n=m||(m=s(e)),r=d.bind(null,n,a,!1),o=d.bind(null,n,a,!0)}else n=s(e),r=p.bind(null,n,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=o());var n=l(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var o=c(n[r]);i[o].references--}for(var a=l(t,e),s=0;s<n.length;s++){var u=c(n[s]);0===i[u].references&&(i[u].updater(),i.splice(u,1))}n=a}}}},function(t,e,n){(e=n(4)(!1)).push([t.i,'.form-container{width:600px;height:400px;margin:20px}.form{display:flex;flex-direction:column;box-shadow:0 10px 20px 0 rgba(0,0,0,0.3);border-radius:16px 16px 16px 16px;font:400 14px/24px Open Sans,sans-serif}.form__top{flex:0 1 250px;padding:50px 50px 0px 50px;border-radius:16px 16px 0px 0px;background-color:#f8f8f7}.form__bottom{flex:0 1 75px;padding:12.5px 50px 12.5px 50px;border-radius:0px 0px 16px 16px;background-color:white;display:flex;justify-content:flex-start;align-items:center}.form__header{height:50px;display:flex;justify-content:flex-start;align-items:center;font-size:20px}.form__header .bold-text{font-weight:bold}.form__editor{height:170px;min-width:500px;margin-bottom:30px;display:flex;flex-wrap:wrap;justify-content:flex-start;align-content:flex-start;background-color:white;border-radius:4px;border:1px solid #c3c1d0;float:left;overflow:auto}.form__editor__input{display:inline-block;flex:1 1 auto;margin:3px;border:none;outline:none;line-height:24px}.form__editor__email{background-color:#e0eaff;display:flex;padding:0px 10px;margin:5px 3px;border:none;border-radius:12px;outline:none;line-height:24px}.form__editor__remover::after{content:"×";font-size:large;padding:0px 5px;cursor:pointer}.form__editor__email--error{text-decoration:underline red}.form__footer{height:100%;display:flex;justify-content:flex-start;align-items:center}.button_primary{color:white;background-color:#4262FF;border-color:#4262FF;border-radius:4px;border:1px solid;padding:10px 20px 10px 20px;margin:0px 10px;text-align:center;font:400 14px/24px Open Sans,sans-serif;cursor:pointer}\n',""]),t.exports=e},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var o=(i=r,c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(l," */")),a=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[n].concat(a).concat([o]).join("\n")}var i,c,l;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);r&&o[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),e.push(l))}},e}},function(t,e,n){"use strict";n.r(e);n(1);var r=function(t){console.log("Build -- [Header] -- start");var e="\n        <div class=".concat("form__header",'>\n            Share <span class="bold-text">   ').concat(t,"   </span> with others\n        </div>\n    ");return console.log("Build -- [Header] -- end"),e},o=function(t){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(t).toLowerCase())},a=function t(e){console.log("Build -- [Editor] -- start");var n="\n        <div class=".concat(t.EDITOR_CLASS,' data-ns="editor">\n            ').concat(t.innerTemplate(e),"\n        </div>\n    ");return console.log("Build -- [Editor] -- end"),n};a.EDITOR_CLASS="form__editor",a.INPUT_CLASS="form__editor__input",a.EMAIL_CLASS="form__editor__email",a.REMOVER_CLASS="form__editor__remover",a.ERROR_CLASS="form__editor__email--error",a.innerTemplate=function(t){var e=0;return t.reduce((function(t,n){return t+"\n            <div class=".concat(a.EMAIL_CLASS," data-key=").concat(e++,"> \n                <span class=").concat(o(n)?"":a.ERROR_CLASS," > ").concat(n," </span>\n                <span class=").concat(a.REMOVER_CLASS," data-ns=").concat("REMOVE","></span>\n            </div>\n        ")}),"")+"<input class=".concat(a.INPUT_CLASS," data-ns=").concat("RECORD",' type="text" contenteditable="true" placeholder="add more people..."></input>')};var i=a,c=function(t,e){console.log("Build -- [Button] -- start");var n='\n        <button type="button" class='.concat("button_primary"," data-ns=").concat(e,">\n            ").concat(t,"\n        </button>\n    ");return console.log("Build -- [Button] -- end"),n},l=function(){console.log("Build -- [Footer] -- start");var t="\n        <div class=".concat("form__footer",">\n            ").concat(c("Add email","ADD"),"\n            ").concat(c("Get emails count","GET_COUNT"),"\n        </div>\n    ");return console.log("Build -- [Footer] -- end"),t};function s(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function u(){return(u=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}var f=function(t){var e=u({},t);console.log("Build -- [Form] -- start");var n=e.boardName,o=n.replace(/\s/g,""),a=e.emails,c=function(){},f=document.createElement("div");f.setAttribute("id",o),f.setAttribute("class","form-container");var d="\n\t\t<div class=".concat("form",">\t\n\t\t\t<div class=").concat("form__top",">\n\t\t\t\t").concat(r(n),"\n\t\t\t\t").concat(i(a),"\n\t\t\t</div>\n\t\t\t<div class=").concat("form__bottom",">\n\t\t\t\t").concat(l(),"\n\t\t\t</div>\n\t\t</div>\n    ");f.innerHTML=d;return console.log("Build -- [Form] -- end"),{form:f,getEmails:function(){return a},setEmails:function(t){(function(t){document.querySelector("#"+o+" ."+i.EDITOR_CLASS).innerHTML=i.innerTemplate(t)})(a=s(t)),c(a)},subscribe:function(t){c=t}}},d=function(){for(var t="abcdefghijklmnopqrstuvwxyz1234567890",e="",n=0;n<6;n++)e+=t[Math.floor(Math.random()*t.length)];return e+"@gmail.com"};function p(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var m={"click.REMOVE":function(t,e){var n=t.parentNode.dataset.key,r=e.getEmails();r.splice(n,1),e.setEmails(r)},"click.ADD":function(t,e){var n=e.getEmails(),r=d();n.push(r),e.setEmails(n)},"click.GET_COUNT":function(t,e,n){var r=0;e.getEmails().forEach((function(t){o(t)&&r++})),alert("Valid emails count : "+r)},"keydown.RECORD":function(t,e,n){var r=n.which||n.keyCode;if(13===r||188===r){var o=t.value;if(t.value="",null==o||""===o)return;var a=e.getEmails();a.push(o),e.setEmails(a)}},"paste.RECORD":function(t,e,n){var r=(n.clipboardData||window.clipboardData).getData("text");if(null!=r&&""!==r){r=r.split(",");var o=e.getEmails();e.setEmails([].concat(p(o),p(r)))}},"focusout.RECORD":function(t,e,n){var r=t.value;if(t.value="",null!=r&&""!==r){var o=e.getEmails();o.push(r),e.setEmails(o)}}},v=function(t,e,n,r){var o=m[e+"."+t];"function"==typeof o&&o(n,r,event)},g={listenOn:function(t,e,n){e.forEach((function(e){t.addEventListener(e,(function(t){t.stopPropagation();var e=t.target,r=t.type,o=e.dataset.ns;console.log("".concat(r," on ").concat(o)),v(o,r,e,n)}))}))}};function b(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}e.default=function(t){var e=t.container,n=b(t,["container"]);console.log("Render -- [EmailsEditor] -- Render in ".concat(e.id," with options ").concat(JSON.stringify(n)));var r=f(n),o=r.form,a=r.getEmails,i=r.setEmails,c=r.subscribe;return e.append(o),g.listenOn(o,["click","keydown","focusout","paste"],{setEmails:i,getEmails:a}),console.log("Render -- [EmailsEditor] -- Finishing rendering"),{getEmails:a,setEmails:i,subscribe:c}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9FbWFpbHNFZGl0b3Ivd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vRW1haWxzRWRpdG9yLy4vc3JjL2VudHJ5LmpzIiwid2VicGFjazovL0VtYWlsc0VkaXRvci8uL3NyYy9zdHlsZXMvbWFpbi5zY3NzPzY5YzciLCJ3ZWJwYWNrOi8vRW1haWxzRWRpdG9yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL0VtYWlsc0VkaXRvci8uL3NyYy9zdHlsZXMvbWFpbi5zY3NzIiwid2VicGFjazovL0VtYWlsc0VkaXRvci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vRW1haWxzRWRpdG9yLy4vc3JjL2NvbXBvbmVudHMvSGVhZGVyLmpzIiwid2VicGFjazovL0VtYWlsc0VkaXRvci8uL3NyYy91dGlscy92YWxpZGF0ZUVtYWlsLmpzIiwid2VicGFjazovL0VtYWlsc0VkaXRvci8uL3NyYy9jb21wb25lbnRzL0VkaXRvci5qcyIsIndlYnBhY2s6Ly9FbWFpbHNFZGl0b3IvLi9zcmMvZXZlbnRzL05hbWVTcGFjZS5qcyIsIndlYnBhY2s6Ly9FbWFpbHNFZGl0b3IvLi9zcmMvY29tcG9uZW50cy9CdXR0b24uanMiLCJ3ZWJwYWNrOi8vRW1haWxzRWRpdG9yLy4vc3JjL2NvbXBvbmVudHMvRm9vdGVyLmpzIiwid2VicGFjazovL0VtYWlsc0VkaXRvci8uL3NyYy9jb21wb25lbnRzL0Zvcm0uanMiLCJ3ZWJwYWNrOi8vRW1haWxzRWRpdG9yLy4vc3JjL3V0aWxzL2dldFJhbmRvbUVtYWlsLmpzIiwid2VicGFjazovL0VtYWlsc0VkaXRvci8uL3NyYy9ldmVudHMvSGFuZGxlcnMuanMiLCJ3ZWJwYWNrOi8vRW1haWxzRWRpdG9yLy4vc3JjL2V2ZW50cy9LZXlzLmpzIiwid2VicGFjazovL0VtYWlsc0VkaXRvci8uL3NyYy9ldmVudHMvTGlzdGVuZXIuanMiLCJ3ZWJwYWNrOi8vRW1haWxzRWRpdG9yLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiRW1haWxzRWRpdG9yIiwicmVxdWlyZSIsImFwaSIsImNvbnRlbnQiLCJkZWZhdWx0Iiwib3B0aW9ucyIsImV4cG9ydGVkIiwibG9jYWxzIiwibWVtbyIsImlzT2xkSUUiLCJCb29sZWFuIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0VGFyZ2V0IiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibGVuZ3RoIiwibW9kdWxlc1RvRG9tIiwibGlzdCIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsIml0ZW0iLCJpZCIsImJhc2UiLCJjb3VudCIsImNvbmNhdCIsImluZGV4Iiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsInB1c2giLCJhZGRTdHlsZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiY3JlYXRlRWxlbWVudCIsImF0dHJpYnV0ZXMiLCJub25jZSIsImtleXMiLCJmb3JFYWNoIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJqb2luIiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsInJlbW92ZSIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3NzTm9kZSIsImNyZWF0ZVRleHROb2RlIiwiY2hpbGROb2RlcyIsInJlbW92ZUNoaWxkIiwiaW5zZXJ0QmVmb3JlIiwiYXBwbHlUb1RhZyIsInJlbW92ZUF0dHJpYnV0ZSIsImJ0b2EiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmaXJzdENoaWxkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInVwZGF0ZSIsInN0eWxlSW5kZXgiLCJwYXJlbnROb2RlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsInRvU3RyaW5nIiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJzcGxpY2UiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iLCJ1c2VTb3VyY2VNYXAiLCJ0aGlzIiwibWFwIiwiY3NzTWFwcGluZyIsInNvdXJjZU1hcHBpbmciLCJiYXNlNjQiLCJkYXRhIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiSGVhZGVyIiwiYm9hcmROYW1lIiwiY29uc29sZSIsImxvZyIsInRlbXBsYXRlIiwidmFsaWRhdGVFbWFpbCIsImVtYWlsIiwidGVzdCIsIlN0cmluZyIsInRvTG93ZXJDYXNlIiwiRWRpdG9yIiwiZW1haWxzIiwiRURJVE9SX0NMQVNTIiwiaW5uZXJUZW1wbGF0ZSIsIklOUFVUX0NMQVNTIiwiRU1BSUxfQ0xBU1MiLCJSRU1PVkVSX0NMQVNTIiwiRVJST1JfQ0xBU1MiLCJyZWR1Y2UiLCJhY2N1bXVsYXRvciIsIkJ1dHRvbiIsImxhYmVsIiwiRm9vdGVyIiwiRm9ybSIsInJlcGxhY2UiLCJjYWxsYmFjayIsImZvcm0iLCJpbm5lckhUTUwiLCJnZXRFbWFpbHMiLCJzZXRFbWFpbHMiLCJuZXdFbWFpbHMiLCJyZW5kZXJFbWFpbHMiLCJzdWJzY3JpYmUiLCJuZXdDYWxsYmFjayIsImdldFJhbmRvbUVtYWlsIiwiY2hhcnMiLCJhY2NvdW50IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiRXZlbnRNYXAiLCJhY3Rpb25zIiwiaWR4IiwiZGF0YXNldCIsIm5ld0VtYWlsIiwiZXZlbnQiLCJhbGVydCIsIndoaWNoIiwia2V5Q29kZSIsImNsaXBib2FyZERhdGEiLCJnZXREYXRhIiwic3BsaXQiLCJoYW5kbGUiLCJ0eXBlIiwiaGFuZGxlciIsIkxpc3RlbmVyIiwibGlzdGVuT24iLCJlbGVtZW50IiwiZXZlbnRzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInN0b3BQcm9wYWdhdGlvbiIsIm5hbWVTcGFjZSIsImNvbnRhaW5lciIsImFwcGVuZCJdLCJtYXBwaW5ncyI6IjZCQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQTBEZixPQXJEQUYsRUFBb0JRLEVBQUlGLEVBR3hCTixFQUFvQlMsRUFBSVYsRUFHeEJDLEVBQW9CVSxFQUFJLFNB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QyxVQUFVeEUsS0FEOUMsTUFHRCtILEVBQUsvSCxHQUEvQ2tJLEVBSDJDLEVBRzNDQSxLQUFNRSxFQUhxQyxFQUdyQ0EsVUFBV0MsRUFIMEIsRUFHMUJBLFVBQVdHLEVBSGUsRUFHZkEsVUFPcEMsT0FORzhCLEVBQVVDLE9BQU9yQyxHQUVqQjZCLEVBQVNDLFNBQVM5QixFQUFNLENBQUMsUUFBUyxVQUFXLFdBQVksU0FBVSxDQUFDRyxZQUFXRCxjQUVsRjFCLFFBQVFDLElBQVIsbURBRU8sQ0FDTnlCLFlBQ0FDLFlBQ0FHIiwiZmlsZSI6ImVtYWlscy1lZGl0b3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG4iLCJjb25zdCBFbWFpbHNFZGl0b3IgPSByZXF1aXJlKCcuL2luZGV4JykuZGVmYXVsdDtcblxubW9kdWxlLmV4cG9ydHMgPSBFbWFpbHNFZGl0b3I7IiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBpc09sZElFID0gZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgdmFyIG1lbW87XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSgpIHtcbiAgICBpZiAodHlwZW9mIG1lbW8gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuICAgICAgLy8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuICAgICAgLy8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuICAgICAgLy8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG4gICAgICAvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcbiAgICAgIG1lbW8gPSBCb29sZWFuKHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtbztcbiAgfTtcbn0oKTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uIGdldFRhcmdldCgpIHtcbiAgdmFyIG1lbW8gPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKHRhcmdldCkge1xuICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtb1t0YXJnZXRdO1xuICB9O1xufSgpO1xuXG52YXIgc3R5bGVzSW5Eb20gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgfTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXNJbkRvbS5wdXNoKHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogYWRkU3R5bGUob2JqLCBvcHRpb25zKSxcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgdmFyIGF0dHJpYnV0ZXMgPSBvcHRpb25zLmF0dHJpYnV0ZXMgfHwge307XG5cbiAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzLm5vbmNlID09PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gJ3VuZGVmaW5lZCcgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgICBpZiAobm9uY2UpIHtcbiAgICAgIGF0dHJpYnV0ZXMubm9uY2UgPSBub25jZTtcbiAgICB9XG4gIH1cblxuICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuICB9KTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb3B0aW9ucy5pbnNlcnQoc3R5bGUpO1xuICB9IGVsc2Uge1xuICAgIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQob3B0aW9ucy5pbnNlcnQgfHwgJ2hlYWQnKTtcblxuICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICAgIH1cblxuICAgIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cblxuICByZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbnZhciByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uIHJlcGxhY2VUZXh0KCkge1xuICB2YXIgdGV4dFN0b3JlID0gW107XG4gIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgIHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcbiAgICByZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcbiAgfTtcbn0oKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyhzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG4gIHZhciBjc3MgPSByZW1vdmUgPyAnJyA6IG9iai5tZWRpYSA/IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIikuY29uY2F0KG9iai5jc3MsIFwifVwiKSA6IG9iai5jc3M7IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG4gICAgdmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG4gICAgaWYgKGNoaWxkTm9kZXNbaW5kZXhdKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG4gICAgICBzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyhzdHlsZSwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBvYmouY3NzO1xuICB2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChtZWRpYSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgnbWVkaWEnLCBtZWRpYSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKCdtZWRpYScpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiBidG9hKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhciBzaW5nbGV0b25Db3VudGVyID0gMDtcblxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBzdHlsZTtcbiAgdmFyIHVwZGF0ZTtcbiAgdmFyIHJlbW92ZTtcblxuICBpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcbiAgICB2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcbiAgICBzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcbiAgICByZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cbiAgICByZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH07XG4gIH1cblxuICB1cGRhdGUob2JqKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB1cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVtb3ZlKCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9OyAvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cbiAgLy8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXG4gIGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSAnYm9vbGVhbicpIHtcbiAgICBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcbiAgfVxuXG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobmV3TGlzdCkgIT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5Eb21bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRG9tW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5mb3JtLWNvbnRhaW5lcnt3aWR0aDo2MDBweDtoZWlnaHQ6NDAwcHg7bWFyZ2luOjIwcHh9LmZvcm17ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtib3gtc2hhZG93OjAgMTBweCAyMHB4IDAgcmdiYSgwLDAsMCwwLjMpO2JvcmRlci1yYWRpdXM6MTZweCAxNnB4IDE2cHggMTZweDtmb250OjQwMCAxNHB4LzI0cHggT3BlbiBTYW5zLHNhbnMtc2VyaWZ9LmZvcm1fX3RvcHtmbGV4OjAgMSAyNTBweDtwYWRkaW5nOjUwcHggNTBweCAwcHggNTBweDtib3JkZXItcmFkaXVzOjE2cHggMTZweCAwcHggMHB4O2JhY2tncm91bmQtY29sb3I6I2Y4ZjhmN30uZm9ybV9fYm90dG9te2ZsZXg6MCAxIDc1cHg7cGFkZGluZzoxMi41cHggNTBweCAxMi41cHggNTBweDtib3JkZXItcmFkaXVzOjBweCAwcHggMTZweCAxNnB4O2JhY2tncm91bmQtY29sb3I6d2hpdGU7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2FsaWduLWl0ZW1zOmNlbnRlcn0uZm9ybV9faGVhZGVye2hlaWdodDo1MHB4O2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDthbGlnbi1pdGVtczpjZW50ZXI7Zm9udC1zaXplOjIwcHh9LmZvcm1fX2hlYWRlciAuYm9sZC10ZXh0e2ZvbnQtd2VpZ2h0OmJvbGR9LmZvcm1fX2VkaXRvcntoZWlnaHQ6MTcwcHg7bWluLXdpZHRoOjUwMHB4O21hcmdpbi1ib3R0b206MzBweDtkaXNwbGF5OmZsZXg7ZmxleC13cmFwOndyYXA7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7YWxpZ24tY29udGVudDpmbGV4LXN0YXJ0O2JhY2tncm91bmQtY29sb3I6d2hpdGU7Ym9yZGVyLXJhZGl1czo0cHg7Ym9yZGVyOjFweCBzb2xpZCAjYzNjMWQwO2Zsb2F0OmxlZnQ7b3ZlcmZsb3c6YXV0b30uZm9ybV9fZWRpdG9yX19pbnB1dHtkaXNwbGF5OmlubGluZS1ibG9jaztmbGV4OjEgMSBhdXRvO21hcmdpbjozcHg7Ym9yZGVyOm5vbmU7b3V0bGluZTpub25lO2xpbmUtaGVpZ2h0OjI0cHh9LmZvcm1fX2VkaXRvcl9fZW1haWx7YmFja2dyb3VuZC1jb2xvcjojZTBlYWZmO2Rpc3BsYXk6ZmxleDtwYWRkaW5nOjBweCAxMHB4O21hcmdpbjo1cHggM3B4O2JvcmRlcjpub25lO2JvcmRlci1yYWRpdXM6MTJweDtvdXRsaW5lOm5vbmU7bGluZS1oZWlnaHQ6MjRweH0uZm9ybV9fZWRpdG9yX19yZW1vdmVyOjphZnRlcntjb250ZW50OlxcXCLDl1xcXCI7Zm9udC1zaXplOmxhcmdlO3BhZGRpbmc6MHB4IDVweDtjdXJzb3I6cG9pbnRlcn0uZm9ybV9fZWRpdG9yX19lbWFpbC0tZXJyb3J7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSByZWR9LmZvcm1fX2Zvb3RlcntoZWlnaHQ6MTAwJTtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7YWxpZ24taXRlbXM6Y2VudGVyfS5idXR0b25fcHJpbWFyeXtjb2xvcjp3aGl0ZTtiYWNrZ3JvdW5kLWNvbG9yOiM0MjYyRkY7Ym9yZGVyLWNvbG9yOiM0MjYyRkY7Ym9yZGVyLXJhZGl1czo0cHg7Ym9yZGVyOjFweCBzb2xpZDtwYWRkaW5nOjEwcHggMjBweCAxMHB4IDIwcHg7bWFyZ2luOjBweCAxMHB4O3RleHQtYWxpZ246Y2VudGVyO2ZvbnQ6NDAwIDE0cHgvMjRweCBPcGVuIFNhbnMsc2Fucy1zZXJpZjtjdXJzb3I6cG9pbnRlcn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG5cbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgJycpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gIHJldHVybiBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG59IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IEhFQURFUl9DTEFTUyA9IFwiZm9ybV9faGVhZGVyXCI7XG5cbmNvbnN0IEhlYWRlciA9IChib2FyZE5hbWUpID0+IHtcblx0Y29uc29sZS5sb2coYEJ1aWxkIC0tIFtIZWFkZXJdIC0tIHN0YXJ0YCk7XG5cbiAgICBjb25zdCB0ZW1wbGF0ZSA9IGBcbiAgICAgICAgPGRpdiBjbGFzcz0ke0hFQURFUl9DTEFTU30+XG4gICAgICAgICAgICBTaGFyZSA8c3BhbiBjbGFzcz1cImJvbGQtdGV4dFwiPiBcXHUwMEEwICR7Ym9hcmROYW1lfSBcXHUwMEEwIDwvc3Bhbj4gd2l0aCBvdGhlcnNcbiAgICAgICAgPC9kaXY+XG4gICAgYDtcblxuICAgIGNvbnNvbGUubG9nKGBCdWlsZCAtLSBbSGVhZGVyXSAtLSBlbmRgKTtcblxuICAgIHJldHVybiB0ZW1wbGF0ZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgdmFsaWRhdGVFbWFpbCA9IChlbWFpbCkgPT4ge1xuXHRjb25zdCByZWdleCA9IC9eKChbXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKFxcLltePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcXSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC87XG5cdHJldHVybiByZWdleC50ZXN0KFN0cmluZyhlbWFpbCkudG9Mb3dlckNhc2UoKSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB2YWxpZGF0ZUVtYWlsO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7UkVNT1ZFLCBSRUNPUkR9IGZyb20gXCIuLi9ldmVudHMvTmFtZVNwYWNlXCI7XG5pbXBvcnQgdmFsaWRhdGVFbWFpbCBmcm9tIFwiLi4vdXRpbHMvdmFsaWRhdGVFbWFpbFwiO1xuXG5jb25zdCBFZGl0b3IgPSAoZW1haWxzKSA9PiB7XG4gICAgY29uc29sZS5sb2coYEJ1aWxkIC0tIFtFZGl0b3JdIC0tIHN0YXJ0YCk7XG4gICAgXG4gICAgY29uc3QgdGVtcGxhdGUgPSBgXG4gICAgICAgIDxkaXYgY2xhc3M9JHtFZGl0b3IuRURJVE9SX0NMQVNTfSBkYXRhLW5zPVwiZWRpdG9yXCI+XG4gICAgICAgICAgICAke0VkaXRvci5pbm5lclRlbXBsYXRlKGVtYWlscyl9XG4gICAgICAgIDwvZGl2PlxuICAgIGA7XG5cbiAgICBjb25zb2xlLmxvZyhgQnVpbGQgLS0gW0VkaXRvcl0gLS0gZW5kYCk7XG5cbiAgICByZXR1cm4gdGVtcGxhdGU7XG59O1xuXG5FZGl0b3IuRURJVE9SX0NMQVNTID0gXCJmb3JtX19lZGl0b3JcIjtcbkVkaXRvci5JTlBVVF9DTEFTUyA9IFwiZm9ybV9fZWRpdG9yX19pbnB1dFwiO1xuRWRpdG9yLkVNQUlMX0NMQVNTID0gXCJmb3JtX19lZGl0b3JfX2VtYWlsXCI7XG5FZGl0b3IuUkVNT1ZFUl9DTEFTUyA9IFwiZm9ybV9fZWRpdG9yX19yZW1vdmVyXCI7XG5FZGl0b3IuRVJST1JfQ0xBU1MgPSBcImZvcm1fX2VkaXRvcl9fZW1haWwtLWVycm9yXCI7XG5cbkVkaXRvci5pbm5lclRlbXBsYXRlID0gKGVtYWlscykgPT4ge1xuICAgIGxldCBrZXkgPSAwO1xuICAgIFxuICAgIHJldHVybiBlbWFpbHMucmVkdWNlKCAoYWNjdW11bGF0b3IsIGVtYWlsKSA9PiB7XG4gICAgICAgIHJldHVybiBhY2N1bXVsYXRvciArIGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9JHtFZGl0b3IuRU1BSUxfQ0xBU1N9IGRhdGEta2V5PSR7a2V5Kyt9PiBcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ke3ZhbGlkYXRlRW1haWwoZW1haWwpID8gXCJcIjogRWRpdG9yLkVSUk9SX0NMQVNTfSA+ICR7ZW1haWx9IDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ke0VkaXRvci5SRU1PVkVSX0NMQVNTfSBkYXRhLW5zPSR7UkVNT1ZFfT48L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYFxuICAgIH0sIFwiXCIpICsgXG4gICAgYDxpbnB1dCBjbGFzcz0ke0VkaXRvci5JTlBVVF9DTEFTU30gZGF0YS1ucz0ke1JFQ09SRH0gdHlwZT1cInRleHRcIiBjb250ZW50ZWRpdGFibGU9XCJ0cnVlXCIgcGxhY2Vob2xkZXI9XCJhZGQgbW9yZSBwZW9wbGUuLi5cIj48L2lucHV0PmBcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVkaXRvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IFJFTU9WRSA9IFwiUkVNT1ZFXCI7XG5leHBvcnQgY29uc3QgQUREID0gXCJBRERcIjtcbmV4cG9ydCBjb25zdCBHRVRfQ09VTlQgPSBcIkdFVF9DT1VOVFwiO1xuZXhwb3J0IGNvbnN0IFJFQ09SRCA9IFwiUkVDT1JEXCI7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IEJVVFRPTl9QUklNQVJZX0NMQVNTPSBcImJ1dHRvbl9wcmltYXJ5XCI7XG5cbmNvbnN0IEJ1dHRvbiA9IChsYWJlbCwgbnMpID0+IHtcblx0Y29uc29sZS5sb2coYEJ1aWxkIC0tIFtCdXR0b25dIC0tIHN0YXJ0YCk7XG5cbiAgICBjb25zdCB0ZW1wbGF0ZSA9IGBcbiAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9JHtCVVRUT05fUFJJTUFSWV9DTEFTU30gZGF0YS1ucz0ke25zfT5cbiAgICAgICAgICAgICR7bGFiZWx9XG4gICAgICAgIDwvYnV0dG9uPlxuICAgIGA7XG5cbiAgICBjb25zb2xlLmxvZyhgQnVpbGQgLS0gW0J1dHRvbl0gLS0gZW5kYCk7XG5cbiAgICByZXR1cm4gdGVtcGxhdGU7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCdXR0b247IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBCdXR0b24gZnJvbSBcIi4vQnV0dG9uXCI7XG5pbXBvcnQgeyBBREQsIEdFVF9DT1VOVCB9IGZyb20gXCIuLi9ldmVudHMvTmFtZVNwYWNlXCI7XG5cbmNvbnN0IEZPT1RFUl9DTEFTUyA9IFwiZm9ybV9fZm9vdGVyXCI7XG5cbmNvbnN0IEZvb3RlciA9ICgpID0+IHtcblx0Y29uc29sZS5sb2coYEJ1aWxkIC0tIFtGb290ZXJdIC0tIHN0YXJ0YCk7XG5cbiAgICBjb25zdCB0ZW1wbGF0ZSA9IGBcbiAgICAgICAgPGRpdiBjbGFzcz0ke0ZPT1RFUl9DTEFTU30+XG4gICAgICAgICAgICAke0J1dHRvbihcIkFkZCBlbWFpbFwiLCBBREQpfVxuICAgICAgICAgICAgJHtCdXR0b24oXCJHZXQgZW1haWxzIGNvdW50XCIsIEdFVF9DT1VOVCl9XG4gICAgICAgIDwvZGl2PlxuICAgIGA7XG5cbiAgICBjb25zb2xlLmxvZyhgQnVpbGQgLS0gW0Zvb3Rlcl0gLS0gZW5kYCk7XG5cbiAgICByZXR1cm4gdGVtcGxhdGU7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBGb290ZXI7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4vSGVhZGVyXCI7XG5pbXBvcnQgRWRpdG9yIGZyb20gXCIuL0VkaXRvclwiO1xuaW1wb3J0IEZvb3RlciBmcm9tIFwiLi9Gb290ZXJcIjtcbmltcG9ydCB2YWxpZGF0ZUVtYWlsIGZyb20gXCIuLi91dGlscy92YWxpZGF0ZUVtYWlsXCI7XG5cbmNvbnN0IENPTlRBSU5FUl9DTEFTUyA9IFwiZm9ybS1jb250YWluZXJcIjtcbmNvbnN0IEZPUk1fQ0xBU1MgPSBcImZvcm1cIjtcbmNvbnN0IEZPUk1fVE9QX0NMQVNTID0gXCJmb3JtX190b3BcIjtcbmNvbnN0IEZPUk1fQk9UVE9NX0NMQVNTID0gXCJmb3JtX19ib3R0b21cIjtcblxuY29uc3QgRm9ybSA9ICh7IC4uLm9wdGlvbnMgfSkgPT4ge1xuXHRjb25zb2xlLmxvZyhgQnVpbGQgLS0gW0Zvcm1dIC0tIHN0YXJ0YCk7XG5cblx0bGV0IGJvYXJkTmFtZSA9IG9wdGlvbnMuYm9hcmROYW1lO1xuXHRsZXQgaWQgPSBib2FyZE5hbWUucmVwbGFjZSgvXFxzL2csICcnKTsgXG5cdGxldCBlbWFpbHMgPSBvcHRpb25zLmVtYWlscztcblx0bGV0IGNhbGxiYWNrID0gKCkgPT4ge307XG5cblx0Y29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdGZvcm0uc2V0QXR0cmlidXRlKFwiaWRcIiwgaWQpO1xuXHRmb3JtLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIENPTlRBSU5FUl9DTEFTUyk7XG5cblx0Y29uc3QgdGVtcGxhdGUgPSBgXG5cdFx0PGRpdiBjbGFzcz0ke0ZPUk1fQ0xBU1N9Plx0XG5cdFx0XHQ8ZGl2IGNsYXNzPSR7Rk9STV9UT1BfQ0xBU1N9PlxuXHRcdFx0XHQke0hlYWRlcihib2FyZE5hbWUpfVxuXHRcdFx0XHQke0VkaXRvcihlbWFpbHMpfVxuXHRcdFx0PC9kaXY+XG5cdFx0XHQ8ZGl2IGNsYXNzPSR7Rk9STV9CT1RUT01fQ0xBU1N9PlxuXHRcdFx0XHQke0Zvb3RlcigpfVxuXHRcdFx0PC9kaXY+XG5cdFx0PC9kaXY+XG4gICAgYDtcblxuXHRmb3JtLmlubmVySFRNTCA9IHRlbXBsYXRlO1xuXG5cdGNvbnN0IHJlbmRlckVtYWlscyA9IChlbWFpbHMpID0+IHtcdFxuXHRcdGNvbnN0IGVkaXRvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyMnICsgaWQgKyAnIC4nICsgRWRpdG9yLkVESVRPUl9DTEFTUyk7XG5cdFx0ZWRpdG9yLmlubmVySFRNTCA9IEVkaXRvci5pbm5lclRlbXBsYXRlKGVtYWlscyk7XG5cdH1cblxuXHRjb25zdCBnZXRFbWFpbHMgPSAoKSA9PiBlbWFpbHM7XG5cblx0Y29uc3Qgc2V0RW1haWxzID0gKG5ld0VtYWlscykgPT4ge1xuXHRcdGVtYWlscyA9IFsuLi5uZXdFbWFpbHNdO1xuXHRcdHJlbmRlckVtYWlscyhlbWFpbHMpO1xuXHRcdGNhbGxiYWNrKGVtYWlscyk7XG5cdH07XG5cblx0Y29uc3Qgc3Vic2NyaWJlID0gKG5ld0NhbGxiYWNrKSA9PiB7XG5cdFx0Y2FsbGJhY2sgPSBuZXdDYWxsYmFjaztcblx0fVxuXG5cdGNvbnNvbGUubG9nKGBCdWlsZCAtLSBbRm9ybV0gLS0gZW5kYCk7XG5cblx0cmV0dXJuIHtcblx0XHRmb3JtLFxuXHRcdGdldEVtYWlscyxcblx0XHRzZXRFbWFpbHMsXG5cdFx0c3Vic2NyaWJlXG5cdH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBGb3JtOyIsIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBnZXRSYW5kb21FbWFpbCA9ICgpID0+IHtcbiAgICBjb25zdCBjaGFycyA9IFwiYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY3ODkwXCI7XG4gICAgY29uc3QgYWNjb3VudExlbmd0aCA9IDY7XG5cblx0bGV0IGFjY291bnQgPSBcIlwiO1xuXG5cdGZvciAobGV0IGkgPSAwOyBpIDwgYWNjb3VudExlbmd0aDsgaSsrKSB7XG5cdFx0YWNjb3VudCArPSBjaGFyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFycy5sZW5ndGgpXTtcblx0fVxuXG5cdHJldHVybiBhY2NvdW50ICsgXCJAZ21haWwuY29tXCI7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBnZXRSYW5kb21FbWFpbDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBFTlRFUiwgQ09NTUEgfSBmcm9tIFwiLi9LZXlzXCI7XG5pbXBvcnQgZ2V0UmFuZG9tRW1haWwgZnJvbSBcIi4uL3V0aWxzL2dldFJhbmRvbUVtYWlsXCI7XG5pbXBvcnQgdmFsaWRhdGVFbWFpbCBmcm9tIFwiLi4vdXRpbHMvdmFsaWRhdGVFbWFpbFwiO1xuXG5jb25zdCBoYW5kbGUgPSBmdW5jdGlvbihucywgdHlwZSwgdGFyZ2V0LCBhY3Rpb25zKSB7XG5cdGNvbnN0IGV2ZW50S2V5ID0gdHlwZSArIFwiLlwiICsgbnM7XG5cdGNvbnN0IGhhbmRsZXIgPSBFdmVudE1hcFtldmVudEtleV07XG5cblx0aWYgKHR5cGVvZiBoYW5kbGVyICE9PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRoYW5kbGVyKHRhcmdldCwgYWN0aW9ucywgZXZlbnQpO1xufTtcblxuY29uc3QgRXZlbnRNYXAgPSB7XG5cdFwiY2xpY2suUkVNT1ZFXCI6ICh0YXJnZXQsIGFjdGlvbnMpID0+IHtcblx0XHRjb25zdCBpZHggPSB0YXJnZXQucGFyZW50Tm9kZS5kYXRhc2V0LmtleTtcblx0XHRjb25zdCBlbWFpbHMgPSBhY3Rpb25zLmdldEVtYWlscygpO1xuXHRcdGVtYWlscy5zcGxpY2UoaWR4LCAxKTtcblx0XHRhY3Rpb25zLnNldEVtYWlscyhlbWFpbHMpO1xuXHR9LFxuXHRcImNsaWNrLkFERFwiOiAodGFyZ2V0LCBhY3Rpb25zKSA9PiB7XG5cdFx0Y29uc3QgZW1haWxzID0gYWN0aW9ucy5nZXRFbWFpbHMoKTtcblx0XHRjb25zdCBuZXdFbWFpbCA9IGdldFJhbmRvbUVtYWlsKCk7XG5cdFx0ZW1haWxzLnB1c2gobmV3RW1haWwpO1xuXHRcdGFjdGlvbnMuc2V0RW1haWxzKGVtYWlscyk7XG5cdH0sXG5cdFwiY2xpY2suR0VUX0NPVU5UXCI6ICh0YXJnZXQsIGFjdGlvbnMsIGV2ZW50KSA9PiB7XG5cdFx0bGV0IGNvdW50ID0gMDtcblxuXHRcdGNvbnN0IGVtYWlscyA9IGFjdGlvbnMuZ2V0RW1haWxzKCk7XG5cdFx0ZW1haWxzLmZvckVhY2goKGVtYWlsKSA9PiB7XG5cdFx0XHRpZiAodmFsaWRhdGVFbWFpbChlbWFpbCkpIHtcblx0XHRcdFx0Y291bnQrKztcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdGFsZXJ0KFwiVmFsaWQgZW1haWxzIGNvdW50IDogXCIgKyBjb3VudCk7XG5cdH0sXG5cdFwia2V5ZG93bi5SRUNPUkRcIjogKHRhcmdldCwgYWN0aW9ucywgZXZlbnQpID0+IHtcblx0XHRjb25zdCBrZXkgPSBldmVudC53aGljaCB8fCBldmVudC5rZXlDb2RlO1xuXG5cdFx0aWYgKGtleSA9PT0gRU5URVIgfHwga2V5ID09PSBDT01NQSkge1xuXHRcdFx0Y29uc3QgbmV3RW1haWwgPSB0YXJnZXQudmFsdWU7XG5cdFx0XHR0YXJnZXQudmFsdWUgPSBcIlwiO1xuXG5cdFx0XHQvLyBzZWN1cml0eSBjaGVja1xuXG5cdFx0XHRpZiAobmV3RW1haWwgPT09IG51bGwgfHwgbmV3RW1haWwgPT09IHVuZGVmaW5lZCB8fCBuZXdFbWFpbCA9PT0gXCJcIiApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRjb25zdCBlbWFpbHMgPSBhY3Rpb25zLmdldEVtYWlscygpO1xuXHRcdFx0ZW1haWxzLnB1c2gobmV3RW1haWwpO1xuXHRcdFx0YWN0aW9ucy5zZXRFbWFpbHMoZW1haWxzKTtcblx0XHR9XG5cblx0fSxcblx0XCJwYXN0ZS5SRUNPUkRcIjogKHRhcmdldCwgYWN0aW9ucywgZXZlbnQpID0+IHtcblx0XHRcdGxldCBuZXdFbWFpbHMgPSAoZXZlbnQuY2xpcGJvYXJkRGF0YSB8fCB3aW5kb3cuY2xpcGJvYXJkRGF0YSkuZ2V0RGF0YShcInRleHRcIik7XG5cblx0XHRcdGlmIChuZXdFbWFpbHMgPT09IG51bGwgfHwgbmV3RW1haWxzID09PSB1bmRlZmluZWQgfHwgbmV3RW1haWxzID09PSBcIlwiICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdG5ld0VtYWlscyA9IG5ld0VtYWlscy5zcGxpdChcIixcIik7XG5cdFx0XHRjb25zdCBlbWFpbHMgPSBhY3Rpb25zLmdldEVtYWlscygpO1xuXG5cdFx0XHRhY3Rpb25zLnNldEVtYWlscyhbLi4uZW1haWxzLCAuLi5uZXdFbWFpbHNdKTtcdFxuXHR9LFxuXHRcImZvY3Vzb3V0LlJFQ09SRFwiOiAodGFyZ2V0LCBhY3Rpb25zLCBldmVudCkgPT4ge1xuXHRcdGNvbnN0IG5ld0VtYWlsID0gdGFyZ2V0LnZhbHVlO1xuXHRcdHRhcmdldC52YWx1ZSA9IFwiXCI7XG5cblx0XHQvLyBzZWN1cml0eSBjaGVja1xuXG5cdFx0aWYgKG5ld0VtYWlsID09PSBudWxsIHx8IG5ld0VtYWlsID09PSB1bmRlZmluZWQgfHwgbmV3RW1haWwgPT09IFwiXCIpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjb25zdCBlbWFpbHMgPSBhY3Rpb25zLmdldEVtYWlscygpO1xuXHRcdGVtYWlscy5wdXNoKG5ld0VtYWlsKTtcblx0XHRhY3Rpb25zLnNldEVtYWlscyhlbWFpbHMpO1xuXHR9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBoYW5kbGU7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IEVOVEVSID0gMTM7XG5leHBvcnQgY29uc3QgQ09NTUEgPSAxODg7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBoYW5kbGUgZnJvbSBcIi4vSGFuZGxlcnNcIjtcblxuY29uc3QgTGlzdGVuZXIgPSB7XG4gICAgbGlzdGVuT246IGZ1bmN0aW9uKGVsZW1lbnQsIGV2ZW50cywgYWN0aW9ucykge1xuICAgICAgICBldmVudHMuZm9yRWFjaCgoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCxcdChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgICAgICAgICAgICAgIGNvbnN0IHR5cGUgPSBldmVudC50eXBlO1xuICAgICAgICAgICAgICAgIGNvbnN0IG5hbWVTcGFjZSA9IHRhcmdldC5kYXRhc2V0Lm5zO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGAke3R5cGV9IG9uICR7bmFtZVNwYWNlfWApO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGhhbmRsZShuYW1lU3BhY2UsIHR5cGUsIHRhcmdldCwgYWN0aW9ucyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgTGlzdGVuZXI7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBcIi4vc3R5bGVzL21haW4uc2Nzc1wiO1xuaW1wb3J0IEZvcm0gZnJvbSBcIi4vY29tcG9uZW50cy9Gb3JtXCI7XG5pbXBvcnQgTGlzdGVuZXIgZnJvbSBcIi4vZXZlbnRzL0xpc3RlbmVyXCI7XG5cbi8vIFRPRE8gbG9nIHRpbWUgc3BlbnRcblxuY29uc3QgRW1haWxzRWRpdG9yID0gKHsgY29udGFpbmVyLCAuLi5vcHRpb25zIH0pID0+IHtcblx0Y29uc29sZS5sb2coYFJlbmRlciAtLSBbRW1haWxzRWRpdG9yXSAtLSBSZW5kZXIgaW4gJHtjb250YWluZXIuaWR9IHdpdGggb3B0aW9ucyAke0pTT04uc3RyaW5naWZ5KG9wdGlvbnMpfWApO1xuXG5cdGNvbnN0IHsgZm9ybSwgZ2V0RW1haWxzLCBzZXRFbWFpbHMsIHN1YnNjcmliZSB9ID0gRm9ybShvcHRpb25zKTtcbiAgICBjb250YWluZXIuYXBwZW5kKGZvcm0pO1xuICAgIFxuICAgIExpc3RlbmVyLmxpc3Rlbk9uKGZvcm0sIFtcImNsaWNrXCIsIFwia2V5ZG93blwiLCBcImZvY3Vzb3V0XCIsIFwicGFzdGVcIl0sIHtzZXRFbWFpbHMsIGdldEVtYWlsc30pO1xuXG5cdGNvbnNvbGUubG9nKGBSZW5kZXIgLS0gW0VtYWlsc0VkaXRvcl0gLS0gRmluaXNoaW5nIHJlbmRlcmluZ2ApO1xuXG5cdHJldHVybiB7XG5cdFx0Z2V0RW1haWxzLFxuXHRcdHNldEVtYWlscyxcblx0XHRzdWJzY3JpYmVcblx0fTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVtYWlsc0VkaXRvcjsiXSwic291cmNlUm9vdCI6IiJ9